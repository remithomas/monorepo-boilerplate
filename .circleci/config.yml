version: 2.1

aliases:
  - &nodejs_build_and_test
      # should be skip if not part of this commit (or not building master)
      - checkout:
          path: ~/monorepo-boilerplate
      - restore_cache:
          keys:
              - v1-dependencies-{{ checksum "package.json" }}
              # fallback to using the latest cache if no exact match is found
              - v1-dependencies-
      - run: npm install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run: npm test

jobs:

  prepare_builds:
      docker:
        - image: circleci/node:7.10
      steps:
          - run: echo "Build !"
          - run:
              name: Export shouldBuild
              command: |
                echo 'export BUILD_NODE1="BUILD"' >> $BASH_ENV
                echo 'export BUILD_NODE2=""' >> $BASH_ENV
                source $BASH_ENV

  service-1-nodejs-build:
      docker:
        - image: circleci/node:7.10
      working_directory: ~/monorepo-boilerplate/service-1-nodejs
      steps: *nodejs_build_and_test
  
  service-3-nodejs-build:
      docker:
        - image: circleci/node:7.10
      working_directory: ~/monorepo-boilerplate/service-3-nodejs
      steps: *nodejs_build_and_test

  # TODO: build only folder who has been modified
  build:
      docker:
        - image: circleci/node:7.10
      steps:
          - run: echo "Build !"

  # TODO: deploy only folder who has been modified
  deploy-prod:
      docker:
        - image: circleci/node:7.10
      steps:
          - run: echo "Deploy prod !"

  conditional:
      docker:
        - image: circleci/node:7.10
      parameters:
        custom_checkout:
          type: string
          default: ""
      steps:
          - when:
              condition: <<parameters.custom_checkout>>
              steps:
                - run: echo "yes it works!"
          - unless:
              condition: <<parameters.custom_checkout>>
              steps:
                - run: echo "nope but why not!"

  # custom_builder:
  #     docker:
  #       - image: circleci/node:7.10
  #     steps:
  #         - run: echo "custom_builder!"

  # builder:
  #     docker:
  #       - image: circleci/node:7.10
  #     steps:
  #       - run:
  #         name: conditionally run a deploy job
  #         command: |
  #           # replace this with your build/deploy check (i.e. current branch is "release")
  #           if [[ true ]]; then
  #             curl --user ${CIRCLE_API_USER_TOKEN} \
  #               --data build_parameters[CIRCLE_JOB]=custom_builder \
  #               --data revision=$CIRCLE_SHA1 \
  #               https://circleci.com/api/v1.1/project/github/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/tree/$CIRCLE_BRANCH
  #           fi
  #       - run: echo "builder!"



workflows:
  version: 2
  build:
    jobs:
      - prepare_builds

      - service-1-nodejs-build:
          requires:
              - prepare_builds
      - service-3-nodejs-build:
          requires:
              - prepare_builds
      - conditional:
          requires:
              - prepare_builds
          # custom_checkout: "any non-empty string is truthy"

      - next:
          type: approval
          requires:
            - conditional

      - build:
          filters:
            branches:
              # only from forks
              only: /^pull\/.*$/

      - deploy-prod:
          requires:
            - service-1-nodejs-build
            - service-3-nodejs-build
            - next
          filters:
            branches:
                only: master
